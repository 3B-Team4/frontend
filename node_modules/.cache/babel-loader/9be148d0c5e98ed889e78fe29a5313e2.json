{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luke\\\\Documents\\\\Projects\\\\SES3A\\\\Frontend\\\\src\\\\Views\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link, Grid, makeStyles, TextField, Typography, Collapse, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Alert } from \"@material-ui/lab\";\nimport SideLayout from \"../Components/SideLayout\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport { validateEmail, validatePassword } from \"../Common/Utils\";\nimport { auth } from \"../Services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    alignSelf: \"flex-start\",\n    marginBottom: theme.spacing(4)\n  },\n  form: {\n    width: \"100%\"\n  },\n  submit: {\n    margin: theme.spacing(4, 0)\n  },\n  link: {\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\nexport default function LoginPage() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const backgroundImageUrl = \"/static/login.jpg\";\n  const [errors, setErrors] = React.useState({});\n  const [loginError, setLoginError] = React.useState(null);\n  const emailRef = React.useRef(\"\");\n  const passwordRef = React.useRef(\"\");\n\n  const handleSignUpClick = event => {\n    // event.preventDefault();\n    history.push(\"/register\");\n  };\n\n  const validateFields = () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const newErrors = {};\n\n    if (!validateEmail(email)) {\n      newErrors.email = \"Invalid email address.\";\n    }\n\n    if (!email || !email.length) {\n      newErrors.email = \"Empty email address.\";\n    }\n\n    if (!validatePassword(password)) {\n      newErrors.password = \"Empty password.\";\n    }\n\n    setErrors(newErrors);\n  };\n\n  const getValues = () => {\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    return {\n      email,\n      password\n    };\n  };\n\n  const isValid = () => {\n    const {\n      email,\n      password\n    } = getValues();\n    return Boolean(!errors.email && !errors.password && email && password);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = getValues();\n\n    try {\n      await auth().signInWithEmailAndPassword(email, password);\n      history.replace(\"/dashboard\");\n    } catch (error) {\n      setLoginError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SideLayout, {\n    title: \"Sign In\",\n    imageUrl: backgroundImageUrl,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.heading,\n      color: \"textPrimary\",\n      variant: \"h1\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(Collapse, {\n        in: Boolean(loginError),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"close\",\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => setLoginError(null),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this),\n          severity: \"error\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        inputRef: emailRef,\n        error: Boolean(errors.email),\n        helperText: errors.email,\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        onBlur: validateFields,\n        onChange: validateFields,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        inputRef: passwordRef,\n        error: Boolean(errors.password),\n        helperText: errors.password,\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"password\",\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\",\n        autoComplete: \"current-password\",\n        onBlur: validateFields,\n        onChange: validateFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        onClick: handleSubmit,\n        disabled: !isValid(),\n        text: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n              className: classes.link,\n              href: \"#\",\n              onClick: handleSignUpClick,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"t2YWx/Hm7EbAw8GlPxIj0wZRMHQ=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/luke/Documents/Projects/SES3A/Frontend/src/Views/LoginPage.js"],"names":["React","useHistory","Link","Grid","makeStyles","TextField","Typography","Collapse","IconButton","CloseIcon","Alert","SideLayout","SubmitButton","validateEmail","validatePassword","auth","useStyles","theme","heading","alignSelf","marginBottom","spacing","form","width","submit","margin","link","fontWeight","typography","fontWeightBold","LoginPage","classes","history","backgroundImageUrl","errors","setErrors","useState","loginError","setLoginError","emailRef","useRef","passwordRef","handleSignUpClick","event","push","validateFields","email","current","value","password","newErrors","length","getValues","isValid","Boolean","handleSubmit","preventDefault","signInWithEmailAndPassword","replace","error","message"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Link,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  Collapse,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport SideLayout from \"../Components/SideLayout\";\r\nimport SubmitButton from \"../Components/SubmitButton\";\r\nimport { validateEmail, validatePassword } from \"../Common/Utils\";\r\nimport { auth } from \"../Services/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heading: {\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(4, 0),\r\n  },\r\n  link: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n}));\r\n\r\nexport default function LoginPage() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const backgroundImageUrl = \"/static/login.jpg\";\r\n\r\n  const [errors, setErrors] = React.useState({});\r\n\r\n  const [loginError, setLoginError] = React.useState(null);\r\n\r\n  const emailRef = React.useRef(\"\");\r\n  const passwordRef = React.useRef(\"\");\r\n\r\n  const handleSignUpClick = (event) => {\r\n    // event.preventDefault();\r\n\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    const newErrors = {};\r\n\r\n    if (!validateEmail(email)) {\r\n      newErrors.email = \"Invalid email address.\";\r\n    }\r\n\r\n    if (!email || !email.length) {\r\n      newErrors.email = \"Empty email address.\";\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      newErrors.password = \"Empty password.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n  };\r\n\r\n  const getValues = () => {\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    return { email, password };\r\n  };\r\n\r\n  const isValid = () => {\r\n    const { email, password } = getValues();\r\n    return Boolean(!errors.email && !errors.password && email && password);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = getValues();\r\n\r\n    try {\r\n      await auth().signInWithEmailAndPassword(email, password);\r\n\r\n      history.replace(\"/dashboard\");\r\n    } catch (error) {\r\n      setLoginError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SideLayout title=\"Sign In\" imageUrl={backgroundImageUrl}>\r\n      <Typography className={classes.heading} color=\"textPrimary\" variant=\"h1\">\r\n        Sign In\r\n      </Typography>\r\n      <form className={classes.form} noValidate>\r\n        <Collapse in={Boolean(loginError)}>\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setLoginError(null)}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n            severity=\"error\"\r\n          >\r\n            {loginError}\r\n          </Alert>\r\n        </Collapse>\r\n        <TextField\r\n          inputRef={emailRef}\r\n          error={Boolean(errors.email)}\r\n          helperText={errors.email}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          onBlur={validateFields}\r\n          onChange={validateFields}\r\n          autoFocus\r\n        />\r\n        <TextField\r\n          inputRef={passwordRef}\r\n          error={Boolean(errors.password)}\r\n          helperText={errors.password}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"password\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onBlur={validateFields}\r\n          onChange={validateFields}\r\n        />\r\n        <SubmitButton\r\n          onClick={handleSubmit}\r\n          disabled={!isValid()}\r\n          text=\"Continue\"\r\n        />\r\n        <Grid container>\r\n          <Grid item>\r\n            <Typography variant=\"body1\">\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                className={classes.link}\r\n                href=\"#\"\r\n                onClick={handleSignUpClick}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </SideLayout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}